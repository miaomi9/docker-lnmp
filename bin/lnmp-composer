#!/usr/bin/env bash

#
# https://github.com/composer/composer
#

ScriptRoot="$( cd "$( dirname "$0"  )" && pwd  )"

source $ScriptRoot/.init
source $ScriptRoot/../config/composer/.env.example
source $ScriptRoot/../config/composer/.env

if [ "$debug" = 'true' ];then set -x; fi

checkNetwork=`docker network ls -f name=lnmp_backend -q`

test -n "$checkNetwork" && network="lnmp_backend" || network="bridge"

mkdir -p vendor

docker run -i ${tty} --rm \
  --mount src=lnmp_composer-cache-data,target=${COMPOSER_CACHE_DIR} \
  --mount src=lnmp_composer_home-data,target=${COMPOSER_HOME} \
  --mount type=bind,src=$ScriptRoot/../config/composer/config.json,target=${COMPOSER_HOME}/config.json \
  --network none \
  bash \
  bash -c \
  "set -x; \
   mkdir -p ${COMPOSER_CACHE_DIR}/repo; \
   mkdir -p ${COMPOSER_CACHE_DIR}/files; \
   rm -rf ${COMPOSER_HOME}/auth.json; \
   chown -R ${LNMP_USER} ${COMPOSER_CACHE_DIR}; \
   chown -R ${LNMP_USER} ${COMPOSER_HOME}; \
  "

if [ "$LNMP_CN_ENV" = 'false' ];then
  sed -i 's!https://mirrors.aliyun.com/composer/!https://repo.packagist.org!g' \
  $ScriptRoot/../config/composer/config.json
fi

exec docker run -i ${tty} --rm \
  --mount type=bind,src=$PWD,target=/app \
  --mount src=lnmp_composer-cache-data,target=${COMPOSER_CACHE_DIR} \
  --mount src=lnmp_composer_home-data,target=${COMPOSER_HOME} \
  --mount type=bind,src=$ScriptRoot/../config/composer/config.json,target=${COMPOSER_HOME}/config.json \
  --mount type=bind,src=$ScriptRoot/../config/php8/php-cli.ini,target=/usr/local/etc/php/php-cli.ini \
  --env-file $ScriptRoot/../config/composer/.env \
  --env PATH=${COMPOSER_HOME}/vendor/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \
  --network $network \
  ${LNMP_PHP_IMAGE}:${LNMP_PHP_IMAGE_TAG} \
  gosu ${LNMP_USER:-root:root} composer "$@"

# --entrypoint /docker-entrypoint.composer \
