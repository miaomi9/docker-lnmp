#!/usr/bin/env bash

set -e

checkNetwork=`docker network ls -f name=lnmp_backend -q`

test -n "$checkNetwork" && network="lnmp_backend" || network="bridge"

if [ "$debug" = 'true' ];then set -x; fi

if [ $# = 0 ];then
  COMMAND=-h
else
  COMMAND="$@"
fi

ScriptRoot="$( cd "$( dirname "$0"  )" && pwd  )"

if ! [ -f $ScriptRoot/../log/php/cli_error.log ];then
  touch $ScriptRoot/../log/php/cli_error.log
fi

. $ScriptRoot/.init

source $ScriptRoot/../config/composer/.env.example
source $ScriptRoot/../config/composer/.env

# -S 参数需要容器暴露端口

S_ERROR(){
  echo "lnmp-php [options] -S <addr>:<port> [-t docroot] [router]"
  exit 1
}

if [ "$1" = '-S' ];then

  if [ -z "$2" ];then S_ERROR; fi

  echo "$2" | grep : > /dev/null 2>&1

  if ! [ "$?" = '0' ];then S_ERROR; fi

  ADDR=`echo "$2" | cut -d : -f 1`
  PORT=`echo "$2" | cut -d : -f 2`

  if [ -z "$PORT" ];then S_ERROR; fi

  shift 2

  exec docker run --init -i ${tty} --rm \
    --mount type=bind,src=$PWD,target=/app \
    --mount src=lnmp_composer-cache-data,target=${COMPOSER_CACHE_DIR} \
    --mount src=lnmp_composer_home-data,target=${COMPOSER_HOME} \
    --mount type=bind,src=$ScriptRoot/../config/php8/php.ini,target=/usr/local/etc/php/php.ini \
    --mount type=bind,src=$ScriptRoot/../log/php/cli_error.log,target=/var/log/php/php_errors.log \
    --mount type=bind,src=$ScriptRoot/../config/composer/config.json,target=${COMPOSER_HOME}/config.json \
    --network $network \
    --env-file $ScriptRoot/../config/composer/.env \
    -e APP_ENV=${APP_ENV:-development} \
    -e TZ=${TZ} \
    -p $ADDR:$PORT:$PORT \
    ${LNMP_PHP_IMAGE}:${LNMP_PHP_IMAGE_TAG} \
    gosu ${LNMP_USER:-root:root} php -d zend_extension=xdebug -d error_log=/var/log/php/php_errors.log -S 0.0.0.0:$PORT "$@"
fi

#
# @link https://github.com/khs1994-docker/lnmp/issues/280
#
# @link https://github.com/moby/moby/issues/2838#issuecomment-29205965
#

docker run -i ${tty} --rm \
  --mount src=lnmp_composer-cache-data,target=${COMPOSER_CACHE_DIR} \
  --mount src=lnmp_composer_home-data,target=${COMPOSER_HOME} \
  --mount type=bind,src=$ScriptRoot/../config/composer/config.json,target=${COMPOSER_HOME}/config.json \
  --network none \
  bash \
  bash -c \
  "set -x; \
   mkdir -p ${COMPOSER_CACHE_DIR}/repo; \
   mkdir -p ${COMPOSER_CACHE_DIR}/files; \
   rm -rf ${COMPOSER_HOME}/auth.json; \
   chown -R ${LNMP_USER} ${COMPOSER_CACHE_DIR}; \
   chown -R ${LNMP_USER} ${COMPOSER_HOME}; \
  "

exec docker run --init -i ${tty} --rm \
  --mount type=bind,src=$PWD,target=/app \
  --mount src=lnmp_composer-cache-data,target=${COMPOSER_CACHE_DIR} \
  --mount src=lnmp_composer_home-data,target=${COMPOSER_HOME} \
  --mount type=bind,src=$ScriptRoot/../config/php8/php-cli.ini,target=/usr/local/etc/php/php-cli.ini \
  --mount type=bind,src=$ScriptRoot/../log/php/cli_error.log,target=/var/log/php/php_errors.log \
  --mount type=bind,src=$ScriptRoot/../config/composer/config.json,target=${COMPOSER_HOME}/config.json \
  --network $network \
  --env-file $ScriptRoot/../config/composer/.env \
  -e TZ=${TZ} \
  -e APP_ENV=${APP_ENV:-development} \
  ${LNMP_PHP_IMAGE}:${LNMP_PHP_IMAGE_TAG} \
  gosu ${LNMP_USER:-root:root} php -d zend_extension=xdebug -d error_log=/var/log/php/php_errors.log $COMMAND
