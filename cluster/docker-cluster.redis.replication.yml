version: "3.9"

#
# Redis 1master-1node (M-S) Replication
#

#
# Example port
#
# master 22000
#
# node 23000
#

#
# master aof
# node rdb
#

x-deploy:
  &default-deploy
  restart_policy:
    condition: any
    delay: 5s
    # max_attempts: 5
    window: 123s
  update_config:
    parallelism: 2
    delay: 10s
    order: stop-first

x-common:
  &common
  image: redis:7.0.0-alpine
  restart: always
  environment:
    - REDIS_HOST=${CLUSTERKIT_REDIS_M_S_HOST:-192.168.199.100}
  env_file:
    - ./scripts/cli/timezone.env
  networks:
    - cluster_redis_m_s
  # logging:
  #   driver: journald
  secrets:
    - source: cluster_redis_m_s_redis_conf
      target: /redis.conf

x-labels:
  &default-labels
  labels:
    - "${LNMP_DOMAIN:-com.khs1994.lnmp}=true"
    - "${LNMP_DOMAIN:-com.khs1994.lnmp}.clusterkit=true"
    - "${LNMP_DOMAIN:-com.khs1994.lnmp}.app.env=clusterkit_redis_replica"

services:

  redis_m_s_master:
    << :
      - *common
      - *default-labels
    ports:
       - "22000:22000"
    volumes:
      - cluster_redis_m_s_master-data:/data
    command: [
      "redis-server",
      "/redis.conf",
      "--daemonize no",
      "--port 22000",
      # "--logfile /var/log/redis/redis.log",
      "--bind 0.0.0.0",
      "--replica-announce-ip ${CLUSTERKIT_REDIS_M_S_HOST:-192.168.199.100}",
      "--replica-announce-port 22000",
      "--appendonly yes",
      # "--save \"\""
      "--aof-use-rdb-preamble yes"
      ]
    deploy:
      << :
        - *default-deploy
        - *default-labels
      # replicas: 2
      placement:
        constraints: [node.role == manager]

  # 从 master 复制数据
  redis_m_s_node-1:
    &redis_m_s_node
    << :
      - *common
      - *default-labels
    ports:
      - "23000:23000"
    volumes:
      - cluster_redis_m_s_node-1-data:/data
    command: [
      "redis-server",
      "/redis.conf",
      "--daemonize no",
      "--bind 0.0.0.0",
      "--port 23000",
      # "--logfile /var/log/redis/redis.log",
      "--replicaof redis_m_s_master 22000",
      "--replica-announce-ip ${CLUSTERKIT_REDIS_M_S_HOST:-192.168.199.100}",
      "--replica-announce-port 23000",
      "--appendonly yes",
      # "--save \"\"",
      "--aof-use-rdb-preamble yes"
      ]
    depends_on:
      - redis_m_s_master
    deploy:
      << :
        - *default-deploy
        - *default-labels
      replicas: 1
      # placement:
      #   constraints: [node.role == manager]

  # 从节点既可以从 master 节点复制数据
  # 也可以从 从节点 复制数据
  # 这里从 从节点 node-1 复制数据
  redis_m_s_node-2:
    << : *redis_m_s_node
    ports:
      - "24000:24000"
    volumes:
      - cluster_redis_m_s_node-2-data:/data
    command: [
      "redis-server",
      "/redis.conf",
      "--daemonize no",
      "--bind 0.0.0.0",
      "--port 24000",
      # "--logfile /var/log/redis/redis.log",
      "--replicaof redis_m_s_node-1 23000",
      "--replica-announce-ip ${CLUSTERKIT_REDIS_M_S_HOST:-192.168.199.100}",
      "--replica-announce-port 24000",
      "--appendonly yes",
      # "--save \"\"",
      "--aof-use-rdb-preamble yes"
      ]
    depends_on:
      - redis_m_s_node-1

volumes:
  cluster_redis_m_s_master-data:
    << : *default-labels

  cluster_redis_m_s_node-1-data:
    << : *default-labels

  cluster_redis_m_s_node-2-data:
    << : *default-labels

networks:
  cluster_redis_m_s:
    << : *default-labels

secrets:
  cluster_redis_m_s_redis_conf:
    << : *default-labels
    file: ./config/redis/redis.conf
